##################### Realizacion de Practica #############################################
data(iris) # Cargar base de datos
#### Grafico con ggplto2:agrupar y guardar ####
Fig1A <- ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) + geom_boxplot()
Fig1B <- ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_jitter() +
geom_smooth(method = "lm")
ggpubr::ggarrange(Fig1A,Fig1B,ncol=2,nrow=1,labels = c("A","B"))
F1 <- ggarrange(Fig1A,Fig1B)
ggsave(filename="F1.png",plot=F1,width=35,height = 20,units=c("cm"),dpi=200,limitsize = FALSE)
#### Graficos con ggplot2:personalidzacion ####
ggplot(data=iris,mapping=aes(x=Especies,y=Petal.Width)) + geom_boxplot()
#### Grafico con ggplto2:agrupar y guardar ####
Fig1A <- ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) + geom_boxplot()
Fig1A
#### Graficos con ggplot2:personalidzacion ####
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) + geom_boxplot()
ggplot(dta=iris,mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point()
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) + geom_point()
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) + geom_point()
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point()
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) +
geom_boxplot(color=red)
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) +
geom_boxplot(color="red")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point()
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) +
geom_boxplot(color="red")
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width)) +
geom_boxplot(color="red",fill="red")
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot()
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot() + geom_point()
#library(dplyr);library(tidyr)
pacman::p_load(dplyr,tidyr,gapminder,tidyverse,cowplot)
# Paquete que sirve para crear datos y cargar base de datos
pacman::p_load(readr,haven,car,ggpubr,viridis,ggsci)
## Manipulando fechas (DOCUMEBTACION DEL PAQUETE LUBRIDATE)
#################################################
##################### Realizacion de Practica #############################################
data(iris) # Cargar base de datos
iris # base de datos completa
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot() + geom_point()
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot(color="black") + geom_point()
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point() +
geom_smooth(method = "lm")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point() +
geom_smooth(method = "lm")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point() +
geom_smooth(method = "lm")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point() +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point(color="steelblue") +
geom_smooth(method = "lm",color="midnightblue")
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot(color="black") + geom_point()
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width)) + geom_point(color="steelblue") +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,fill="Red")) + geom_point(color="steelblue") +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,fill=Specias)) + geom_point(color="steelblue") +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,fill=Species)) + geom_point(color="steelblue") +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue") +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue",alpha=1) +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue",alpha=2) +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue",alpha=2) +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue",alpha=0) +
geom_smooth(method = "lm",color="midnightblue")
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue",alpha=5) +
geom_smooth(method = "lm",color="midnightblue")
ggplot
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue",alpha=5,shape=18) +
geom_smooth(method = "lm",color="midnightblue")
ggplot
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue",alpha=6,shape=18,size=5) +
geom_smooth(method = "lm",color="midnightblue",linetype=2)
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(color="steelblue",alpha=6,shape=18,size=3) +
geom_smooth(method = "lm",color="midnightblue",linetype=2)
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species)) + geom_point(alpha=6,shape=18,size=3) +
geom_smooth(method = "lm",color="midnightblue",linetype=2)
ggplot(data=iris,mapping=aes(x=Petal.Length,y=Petal.Width,color=Species,linetype=Species)) + geom_point(alpha=6,shape=18,size=3) +
geom_smooth(method = "lm",color="midnightblue")
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot(color="black") + geom_point()
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) + geom_point() +
geom_boxplot(color="black")
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species,color=Species)) + geom_point() +
geom_boxplot(color="black")
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species,color=Species)) + geom_point() +
geom_boxplot()
# Color,fill,alpha,shape,linetype
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species,color=Species)) + geom_point() +
geom_boxplot(color="black")
# Scale manual (values,name,limits,breaks,labels)
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species,color=Species)) +
geom_point() + geom_boxplot(color="black")
# Scale manual (values,name,limits,breaks,labels)
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species,color=Species)) +
geom_point() + geom_boxplot(color="black") + scalle_fill_manual(values=c("indianred1","red2","red4"))+
scale_color_manual(values=c("indianred1","red2","red4"))
# Scale manual (values,name,limits,breaks,labels)
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species,color=Species)) +
geom_point() + geom_boxplot(color="black") + scale_fill_manual(values=c("indianred1","red2","red4"))+
scale_color_manual(values=c("indianred1","red2","red4"))
# Scale manual (values,name,limits,breaks,labels)
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species,color=Species)) +
geom_point() + geom_boxplot(color="black") + scale_fill_manual(values=c("indianred1","red2","red4"),name="Flor")+
scale_color_manual(values=c("indianred1","red2","red4"),name="Flor")
# Scale manual (values,name,limits,breaks,labels)
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species,color=Species)) +
geom_point() + geom_boxplot(color="black") + scale_fill_manual(values=c("indianred1","red2","red4"),name="Flor") +
scale_color_manual(values=c("indianred1","red2","red4"),name="Flor")
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species,color=Species)) +
geom_point() + geom_boxplot(color="black") + scale_fill_manual(values=c("indianred1","red2","red4"),name="Flor",labels=c("setosa","Versicolor","Virginica")) +
scale_color_manual(values=c("indianred1","red2","red4"),name="Flor",labels=c("setosa","Versicolor","Virginica"))
# Scale (brewer,grey,gradient,viridis,ggsci)
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot()
# Scale (brewer,grey,gradient,viridis,ggsci)
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot() + scale_fill_brewer()
# Scale (brewer,grey,gradient,viridis,ggsci)
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot() + scale_fill_brewer() + scale_color_grey()
# Scale (brewer,grey,gradient,viridis,ggsci)
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot() + scale_fill_brewer() + scale_color_grey()
# Scale (brewer,grey,gradient,viridis,ggsci)
ggplot(data=iris,mapping=aes(x=Species,y=Petal.Width,fill=Species)) +
geom_boxplot() + scale_fill_grey() + scale_color_grey()
ggplot(data=iris,mapping = aes(x=Peta.Length,y=Petal.Width,color=Petal.Width))+
geom_point(alpha=0.6,shape=16) +
geom_smooth(method = "lm",color="red")
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width))+
geom_point(alpha=0.6,shape=16) +
geom_smooth(method = "lm",color="red")
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width))+
geom_point(alpha=0.6,shape=16) +
geom_smooth(method = "lm",color="red") + scale_color_viridis()
# Paquete que sirve para crear datos y cargar base de datos
pacman::p_load(readr,haven,car,ggpubr,viridis,ggsci,dplyr,tidyr,gapminder,tidyverse,cowplot)
####FACETING####
data(mpg)
####FACETING####
data(mpg)
data
#library(dplyr);library(tidyr)
pacman::p_load(dplyr,tidyr,gapminder,tidyverse,cowplot)
# Paquete que sirve para crear datos y cargar base de datos
pacman::p_load(readr,haven,car,ggpubr,viridis,ggsci)
####FACETING####
data(mpg)
?mpg
table(mpg$manufacturer)
table(mpg$year)
table(mpg$cyl)
table(mpg$fl)
table(mpg$class)
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width))+
geom_point(alpha=0.6,shape=16) +
geom_smooth(method = "lm",color="red") + scale_color_viridis()
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
# Con el argumento labels se puede cambiar la etiqueta de las categorias en las leyendas
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species))+
geom_boxplot(color="black",size=0.75) +
scale_fill_manual(values=c("indianred1","red2","red4"),labels=c("F1","F2","F3"))
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
# Con el argumento labels se puede cambiar la etiqueta de las categorias en las leyendas
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species))+
geom_boxplot(color="black",size=0.75) +
scale_fill_manual(values=c("indianred1","red2","red4"),labels=c("F1","F2","F3"),name="Tipo \n de flor")
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
# Con el argumento labels se puede cambiar la etiqueta de las categorias en las leyendas
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species))+
geom_boxplot(color="black",size=0.75) +
scale_fill_manual(values=c("indianred1","red2","red4"),labels=c("F1","F2","F3"),name="Tipo \n de flor",
limits=("F2","F1","F3"))
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
# Con el argumento labels se puede cambiar la etiqueta de las categorias en las leyendas
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species))+
geom_boxplot(color="black",size=0.75) +
scale_fill_manual(values=c("indianred1","red2","red4"),labels=c("F1","F2","F3"),name="Tipo \n de flor",
limits=c("F2","F1","F3"))
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
# Con el argumento labels se puede cambiar la etiqueta de las categorias en las leyendas
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species))+
geom_boxplot(color="black",size=0.75) +
scale_fill_manual(values=c("indianred1","red2","red4"),labels=c("F1","F2","F3"),name="Tipo \n de flor",
)
ggplot(data=iris,mapping = aes(x=Species,y=Petal.Width,fill=Species))+
geom_boxplot(color="black",size=0.75) +
scale_fill_manual(values=c("indianred1","red2","red4"),name="Tipo \n de flor",
limits=c("virginica","setosa","versicolor"))
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggplot2::scale_fill_brewer()
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black")
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy)) +
geom_point() + geom_boxplot(color="black")
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggplot2::scale_fill_brewer()
RColorBrewer::display.brewer.all()
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggplot2::scale_fill_OrRd()
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggplot2::scale_fill_brewer(palette=BrBG)
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggplot2::scale_fill_brewer()
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggplot2::scale_fill_brewer(palette="Spectral")
# Se pueden cambiar las variables con paletas predeterminadas
## PALETAS PARA VARIABLES CATEGORICAS
## PAQUETE GGPLOT2
# Scale brewer
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggplot2::scale_fill_brewer(palette="Spectral",name="Tipo",
labels=LETTERS[1:7])
# Scale discrete
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggplot2::scale_fill_discrete()
#PAQUETE GGTHEMES
# scale calc
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggthemes::scalle_fill_calc()
# Paquete que sirve para crear datos y cargar base de datos
pacman::p_load(readr,haven,car,ggpubr,viridis,ggsci,ggthemes)
# Paquete que sirve para crear datos y cargar base de datos
pacman::p_load(readr,haven,car,ggpubr,viridis,ggsci,ggthemes)
#PAQUETE GGTHEMES
# scale calc
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggthemes::scalle_fill_calc()
#PAQUETE GGTHEMES
# scale calc
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggthemes::scale_color_calc()
#PAQUETE GGTHEMES
# scale calc
ggplot(data=mpg,mapping = aes(x=class,y=hwy,fill=class)) +
geom_point() + geom_boxplot(color="black") + ggthemes::scale_fill_calc()
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width)) + geom_point(size=2)
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2)
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_gradient2()
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis()
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_b()
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_a()
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c()
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_d()
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c()
## PALETAS PARA VARIABLES CONTINUAS;
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A")
# Logaritmo
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A") + scale_x_log10()
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A") + scale_y_sqrt()
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A")
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A") + scale_y_sqrt()
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A") + scale_x_reverse()
# Separar en segmentos
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A") + scale_y_binned()
# Convertir en tiempo
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A") + scale_x_time() + scale_y_time()
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A")
# Convertir en tiempo
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A") + scale_x_time() + scale_y_time()
#library(dplyr);library(tidyr)
pacman::p_load(dplyr,tidyr,gapminder,tidyverse,cowplot)
# Paquete que sirve para crear datos y cargar base de datos
pacman::p_load(readr,haven,car,ggpubr,viridis,ggsci,ggthemes)
# Convertir en tiempo
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Petal.Width)) + geom_point(size=2) +
ggplot2::scale_color_viridis_c(option = "A") + scale_x_time() + scale_y_time()
####- Graficos con ggplot2:titulos,etiquetas, temas
ggplot(data=iris,mapping=aes(x=Sepal.Length,fill=Species)) +
geom_density(color="black",size=1,linetype=5,alpha=0.75)
####- Graficos con ggplot2:titulos,etiquetas, temas
ggplot(data=iris,mapping=aes(x=Sepal.Length,fill=Species)) +
geom_density(color="black",size=1,linetype=5,alpha=0.75) +
scale_fill_viridis_b(option="C",discrete=TRUE,name="Tipo \n de Flor")
####- Graficos con ggplot2:titulos,etiquetas, temas
ggplot(data=iris,mapping=aes(x=Sepal.Length,fill=Species)) +
geom_density(color="black",size=1,linetype=5,alpha=0.75) +
scale_fill_viridis(option="C",discrete=TRUE,name="Tipo \n de Flor")
####- Graficos con ggplot2:titulos,etiquetas, temas
ggplot(data=iris,mapping=aes(x=Sepal.Length,fill=Species)) +
geom_density(color="black",size=1,linetype=5,alpha=0.75) +
viridis::scale_fill_viridis(option="C",discrete=TRUE,name="Tipo \n de Flor")
####- Graficos con ggplot2:titulos,etiquetas, temas
ggplot(data=iris,mapping=aes(x=Sepal.Length,fill=Species)) +
geom_density(color="black",size=1,linetype=5,alpha=0.75) +
scale_fill_viridis(option="C",discrete=TRUE,name="Tipo \n de Flor") +
ggtitle("Distribución de la longitud de sepalo")
####- Graficos con ggplot2:titulos,etiquetas, temas
ggplot(data=iris,mapping=aes(x=Sepal.Length,fill=Species)) +
geom_density(color="black",size=1,linetype=5,alpha=0.75) +
scale_fill_viridis(option="C",discrete=TRUE,name="Tipo \n de Flor") +
ggtitle("Distribución de la longitud de sepalo") +
xlab("Longitud de Sepalo") + ylab("Densidad")
# TEMAS
# paquetes ggplot
ggplot(data=iris,mapping = aes(x=Sepal.Length,fill=Species)) + geom_density(alpa=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE) + ggplot2::theme_get()
# paquete ggppubr
ggplot(data=iris,mapping = aes(x=Sepal.Length,fill=Species)) + geom_density(alpa=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE) + ggpubr::theme_cleveland()
# paquete ggthemes
ggplot(data=iris,mapping = aes(x=Sepal.Length,fill=Species)) + geom_density(alpa=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE) + ggthemes::theme_stata()
ggplot(data=iris,mapping = aes(x=Sepal.Length,fill=Species)) + geom_density(alpa=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE) + ggthemes::theme_economist()
# Todo junto:
F1A <- ggplot(data=iris,mapping = aes(x=Sepal.Length,fill=Species)) + geom_density(color="black",size=1,linetype=5,alpa=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
ggtitle("Distribución de la \nlongitud de sepalo") + xlab("Longitud de sepalo") + ylab("Densidad") +
ggpubr::theme_pub
# Todo junto:
F1A <- ggplot(data=iris,mapping = aes(x=Sepal.Length,fill=Species)) + geom_density(color="black",size=1,linetype=5,alpa=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
ggtitle("Distribución de la \nlongitud de sepalo") + xlab("Longitud de sepalo") + ylab("Densidad") +
ggpubr::theme_pubclean()
# Todo junto:
F1A <- ggplot(data=iris,mapping = aes(x=Sepal.Length,fill=Species)) + geom_density(color="black",size=1,linetype=5,alpha=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
ggtitle("Distribución de la \nlongitud de sepalo") + xlab("Longitud de sepalo") + ylab("Densidad") +
ggpubr::theme_pubclean()
F1A
F1B <- ggplot(data=iris,mapping = aes(x=Sepal.Length,y=Sepal.Width,fill=Species)) + geom_point(size=1.9,shape=21) + geom_boxplot(color="black",size=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
scale_color_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
ggtitle("Anchura de sepalo para \n cada tipo de flor") + xlab("") + ylab("Anchura de petalo") +
ggpubr::theme_pubclean()
F1B <- ggplot(data=iris,mapping = aes(x=Sepal.Length,y=Sepal.Width,fill=Species)) + geom_point(size=1.9,shape=21) + geom_boxplot(color="black",size=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
scale_color_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
ggtitle("Anchura de sepalo para \n cada tipo de flor") + xlab("") + ylab("Anchura de petalo") +
F1B
F1B <- ggplot(data=iris,mapping = aes(x=Sepal.Length,y=Sepal.Width,fill=Species)) + geom_point(size=1.9,shape=21) + geom_boxplot(color="black",size=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
scale_color_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
ggtitle("Anchura de sepalo para \n cada tipo de flor") + xlab("") + ylab("Anchura de petalo") +
ggpubr::theme_pubclean()
F1B
F1B <- ggplot(data=iris,mapping = aes(x=Species,y=Sepal.Width,fill=Species)) + geom_point(size=1.9,shape=21) + geom_boxplot(color="black",size=0.75) +
scale_fill_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
scale_color_viridis(option = "C",discrete = TRUE,name="Tipo \n de flor") +
ggtitle("Anchura de sepalo para \n cada tipo de flor") + xlab("") + ylab("Anchura de SePalo") +
ggpubr::theme_pubclean()
F1B
F1c <- ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Sepal.Width)) +
geom_point(size=2,alpha=0.75)
F1c <- ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Sepal.Width)) +
geom_point(size=2,alpha=0.75)
F1c <- ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width)) +
geom_point(size=2,alpha=0.75)
F1C <- ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Sepal.Width)) +
geom_point(size=2,alpha=0.75) + scale_colour_viridis_b(option="C",name="Anchura\nde sepalo") +
geom_smooth(color="black",method = "lm") + geom_rug(color="black") + ggpubr::theme_pubclean() +
ggtitle("Relacion longitud-anchura \nde petalo") + xlab("Longitud de petalo") + ylab("Anchura de petalo")
F1C
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Sepal.Width)) +
geom_point(size=2,alpha=0.75)
ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Sepal.Width)) +
geom_point(size=2,alpha=0.75)
X <-ggplot(data=iris,mapping = aes(x=Petal.Length,y=Petal.Width,color=Sepal.Width)) +
geom_point(size=2,alpha=0.75)
X
F1A
# Funcion "theme para modificar el formato de la grafica:
# Borrar elementos : elemento_blank
F1A + theme(plot.title = element_blank()) # Titulo
F1A
# Funcion "theme para modificar el formato de la grafica:
# Borrar elementos : elemento_blank
F1A + theme(plot.title = element_blank()) # Titulo
F1A
F1A + theme(axis.text.x = element_blank(),axis.text.y = element_blank() ) # Texto de Eje
F1A + theme(axis.text.x = element_blank(),axis.text.y = element_blank() ) # Texto de Eje
F1A
F1A + theme(axis.text.x = element_blank(),axis.text.y = element_blank() ) # Texto de Eje
F1A
F1A + theme(axis.title.x = element_blank(),axis.title.y = element_blank() ) # Titulo de Eje
F1A + theme(legend.text = element_blank()) # Texto de la leyenda
F1A
F1A + theme(legend.text = element_blank()) # Texto de la leyenda
F1A + theme(legend.title = element_blank()) # Titulo de la leyenda
# Borrar todo
F1A + theme(plot.title = element_blank(),axis.title = element_blank(),
axis.text = element_blank(),axis.ticks = element_blank(),
legend.position = "none")
#Cambiar posicion de la leyenda
F1A + theme(legend.position = "top")
#Cambiar posicion de la leyenda
F1A + theme(legend.position = "bottom")
#Cambiar posicion de la leyenda
F1A + theme(legend.position = "right")
F1A
#Element_text:fuente
F1A + theme(plot.title = element_text(family = "sans"))
#Element_text:fuente
F1A + theme(plot.title = element_text(family = "serif"))
#Element_text:fuente,formato,color,tamaño,justificacion horizontal
F1A + theme(plot.title = element_text(family = "serif"))
F1A + theme(plot.title = element_text(face = "plain"))
F1A + theme(plot.title = element_text(colour = "red4"))
F1A + theme(plot.title = element_text(size=10))
F1A + theme(plot.title = element_text(size=11,hjust=0))
F1A + theme(plot.title = element_text(size=11,hjust=5))
F1A + theme(plot.title = element_text(size=11,hjust=0))
F1A + theme(plot.title = element_text(size=11,hjust=1))
F1A + theme(plot.title = element_text(size=11,hjust=0.5)) # Centrado
F1A
F1A + theme(plot.title = element_text(size=11,hjust=0.5,vjust=1))
F1A + theme(plot.title = element_text(angle = 0))
F1A + theme(plot.title = element_text(angle = 90))
F1A + theme(plot.title = element_text(angle = 180))
F1A + theme(plot.title = element_text(angle = 360))
F1A + theme(plot.title = element_text(angle = 360,hjust = 0.5))
c(2,3)*c(4,5)
source("C:/Users/Usuario/Desktop/Curso RStudio/AprendiendoRStudio/Practico.R")
